"""add material requirements tables

Revision ID: 001
Revises: 
Create Date: 2025-03-03 22:38:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('materialrequirement',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('reference_number', sa.String(), nullable=False),
                    sa.Column('status', sa.Enum('DRAFT', 'CALCULATED', 'PROCESSING', 'COMPLETED', 'CANCELLED', name='materialrequirementstatus'), nullable=False),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('calculation_date', sa.DateTime(), nullable=True),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('consider_stock', sa.Boolean(), nullable=True),
                    sa.Column('consider_min_stock', sa.Boolean(), nullable=True),
                    sa.Column('planning_start_date', sa.DateTime(), nullable=False),
                    sa.Column('planning_end_date', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('reference_number')
                    )
    op.create_index(op.f('ix_materialrequirement_reference_number'), 'materialrequirement', ['reference_number'], unique=True)

    op.create_table('materialrequirementitem',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('material_requirement_id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('required_quantity', sa.Float(), nullable=False),
                    sa.Column('available_quantity', sa.Float(), nullable=True),
                    sa.Column('quantity_to_procure', sa.Float(), nullable=False),
                    sa.Column('requirement_date', sa.DateTime(), nullable=True),
                    sa.Column('planned_order_date', sa.DateTime(), nullable=True),
                    sa.Column('is_available', sa.Boolean(), nullable=True),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['material_requirement_id'], ['materialrequirement.id'], ),
                    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('materialrequirementorder',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('material_requirement_id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['material_requirement_id'], ['materialrequirement.id'], ),
                    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('materialrequirementorder')
    op.drop_table('materialrequirementitem')
    op.drop_index(op.f('ix_materialrequirement_reference_number'), table_name='materialrequirement')
    op.drop_table('materialrequirement')
    # ### end Alembic commands ###
